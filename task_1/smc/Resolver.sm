%class Resolver
%package resolver

%start MainMap::irc_identify


%map MainMap
%%

Default {
    next no_match { finish(False); }
}

irc_identify {
    next [ ctxt.get(6).is_irc() and ctxt.validate() ]      server_name_iden    { skip(6); }
}

server_name_iden {
    next [ ctxt.get().is_alnum() ]                         server_name_iden    { context(1); skip(); }
    next [ ctxt.get() == ":" and ctxt.context() == 1]      port_iden           { skip(); }
    next [ ctxt.get() == "/" and ctxt.context() == 1]      channel_name_iden   { skip(); }
    next [ ctxt.context() == 1 ]                           match               { finish(True); }
}

port_iden {
    next [ ctxt.update_port() ]                             port_iden           { context(2); skip(); }
    next [ ctxt.get() == "/" and ctxt.context() == 2]       channel_name_iden   { skip(); }
    next [ ctxt.context() == 2 ]                            match               { finish(True); }
}

channel_name_iden {
    next [ ctxt.get().is_alnum() ]                         channel_name_iden   { context(3); skip(); }
    next [ ctxt.get() == "?"]                              password_iden       { skip(); }
    next                                                   match               { finish(True); }
}

password_iden {
    next [ ctxt.get().is_alnum() ]                         password_iden       { context(4); skip(); }
    next [ ctxt.context() == 4 ]                           match               { finish(True); }
}

match {}
no_match {}
%%